@mixin border-collapse($color: $border-color, $width: $border-width) {
	box-shadow:
		$width 0 0 0 $color,
		0 $width 0 0 $color,
		$width $width 0 0 $color,
		$width 0 0 0 $color inset,
		0 $width 0 0 $color inset;
}

@mixin loading() {
	$loading-size: toRem(30) !default;
	$loading-size-multiplier: 4 !default;
	$loading-color: lighten(map-get($theme-colors, dark), 40%) !default;
	$loading-svg: svg-uri(
		'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">' +
			'<circle fill="none" stroke="#{$loading-color}" stroke-width="10" cx="50" cy="50" r="45" />' +
		'</svg>'
	) !default;

	&::before, &::after {
		display: flex;
		justify-content: center;
		align-items: center;
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
		z-index: 20000;
		background-size: $loading-size;
		background-image: $loading-svg;
		background-position: center;
		background-repeat: no-repeat;
		will-change: transform, color;
		content: '';
	}

	&::before {
		z-index: 100000;
		background-color: rgba(map-get($theme-colors, light), 0.6);
		animation: pulse 1s infinite ease-in-out;
		@keyframes pulse {
			0% { background-size: $loading-size; }
			50% { background-size: $loading-size * $loading-size-multiplier; }
			100% { background-size: $loading-size; }
		}
	}

	&::after {
		z-index: 100001;
		animation: pulse-rev 1s infinite ease-in-out;
		@keyframes pulse-rev {
			0% { background-size: $loading-size * $loading-size-multiplier; }
			50% { background-size: $loading-size; }
			100% { background-size: $loading-size * $loading-size-multiplier; }
		}
	}
}

@mixin sortablejs-rtl-fix() {
	[dir='rtl'] & {
		direction: ltr;
		text-align: left;

		> * {
			direction: rtl;
			text-align: right;
		}
	}
}
